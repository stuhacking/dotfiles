[user]
  name = Stuart Hacking
  email = stuhacking@gmail.com

[alias]
  # Search
  f = "!git ls-files | grep -i"
  g = "grep --break --heading --line-number"
  gr = grep -Ii

  # Log commands
  log-base = log --color --abbrev-commit --decorate
  ld = !git log-base --pretty=format:'%C(red)%h %C(yellow)%ad%d%C(reset) %s %C(bold blue)<%an>%C(reset)' --date=short
  ls = !git log-base --pretty=format:'%C(red)%h%C(reset)%C(yellow)%d%C(reset) %s %C(green)(%cr)%C(bold blue)<%an>%C(reset)'
  lg = !git ls --graph
  lm = !git lg --author=\"`git config user.email`\"
  lc = !git log-base --pretty=format:'%C(red)%h%C(reset)%C(yellow)%d%C(reset) %s %C(green)(%cr)%C(bold blue)<%an>%C(green)[%cn]%C(reset)'

  fl = log -u

  s = status                 # Full status
  ss = status -s             # Short status

  br = branch
  brr = branch -r            # Only remote
  bra = branch -a            # All branches
  has = branch -a --contains # Check which branches contain <commit-ish>

  cl = clone
  co = checkout
  cob = checkout -b          # Checkout new branch

  r = reset                  # Unstage staged changes
  rv = reset HEAD^ --soft    # Undo last commit, bring changes into staging area
  rh = reset HEAD^ --hard    # Undo last commit, drop changes completely

  up = fetch --prune         # Update
  pr = pull --rebase
  ps = push
 
  ci = commit
  cp = cherry-pick

  sk = stash save -u         # Save all local changes to stash (stash kill)
  sy = stash pop             # Retrieve last stash (stash yank)

  ls-alias = "!git config -l | grep alias | cut -c 7-"
  ls-conflict = !git ls-files --unmerged | cut -f 2 | uniq | xargs grep -Hn '<<<<'

[grep]
  lineNumber = true
  extendRegexp = true

[color]
  ui = auto

[core]
  pager = less -F -X          # Don't block if output fits on screen.
  fileMode = false
  ignoreCase = true
  excludesfile = ~/.gitignore
  whitespace = blank-at-eol,blank-at-eof,tab-in-indent
  editor = gvim -f

[push]
  default = simple

[rerere]
  enabled = true

[merge]
  keepBackup = false;
  tool = p4merge

[mergetool]
  prompt = false

[mergetool "p4merge"]
  cmd = /home/shacking/app/P4V/bin/p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false

[diff]
  tool = p4merge
  renameLimit = 999999

[difftool]
  prompt = false

[difftool "p4merge"]
  cmd = /home/shacking/app/P4V/bin/p4merge "$LOCAL" "$REMOTE"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false
